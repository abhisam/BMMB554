<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on BMMB554</title>
    <link>https://nekrut.github.io/BMMB554/tags/python/</link>
    <description>Recent content in Python on BMMB554</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://nekrut.github.io/BMMB554/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lecture 4: Python refresher 2</title>
      <link>https://nekrut.github.io/BMMB554/lecture4/</link>
      <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture4/</guid>
      <description>Conditionals, Loops, and Files This material is heavily inspired by Materials for the course run by the Graduate School of Life Sciences, University of Cambridge with some modifications.  Let&amp;rsquo;s get started  Point your browser to http://colab.research.google.com Open notebook 2019/ipynb/intro2.ipynb from https://github.com/nekrut/BMMB554  Case study: Transposon insertion sequencing (TnSeq) Transposon insertion allows genome-wide identification of essential genes. The idea is simple = important genes cannot be disrupted and there will not accept any transposon insertions.</description>
    </item>
    
    <item>
      <title>Lecture 3: Python refresher 1</title>
      <link>https://nekrut.github.io/BMMB554/lecture3/</link>
      <pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture3/</guid>
      <description>What is Python? Python is a modern, general-purpose, object-oriented, high-level programming language.
This material is heavily inspired by Materials for the course run by the Graduate School of Life Sciences, University of Cambridge with some modifications.  General characteristics of Python:  Clean and Simple: Easy-to-read and intuitive code, easy-to-learn minimalistic syntax, maintainability scales well with size of projects. Expressive: Fewer lines of code, fewer bugs, easier to maintain.</description>
    </item>
    
    <item>
      <title>Lecture 2: Basic machinery = Jupyter &#43; GitHub</title>
      <link>https://nekrut.github.io/BMMB554/lecture2/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://nekrut.github.io/BMMB554/lecture2/</guid>
      <description>Welcome to Notebooks An important assumption for this lecture is that (1) you have a Google account, (2) know how to use Google Drive, and (3) also have an active GitHub account.  When you start an analysis, you don&amp;rsquo;t really know how it will go. Maybe data is bad and there is no real reason to analyze anything at all. Maybe data data outliers that need to be dealt with.</description>
    </item>
    
  </channel>
</rss>